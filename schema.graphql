# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

# type Block @entity {
#   id: ID! # The block hash
#   height: BigInt!
# }

# type Transaction @entity {
#   id: ID!
#   blockHeight: BigInt!
#   timestamp: String!
# }

type Round @entity {
  id: ID! # contractAddress
  blockHeight: BigInt!
  txHash: String!
  operator: String!
  contractAddress: String!
  circuitName: String!
  timestamp: Date!
  votingStart: String!
  votingEnd: String!
  status: String!
  period: String!
  actionType: String!
  roundId: String!
  roundTitle: String!
  roundDescription: String!
  roundLink: String!
  maciDenom: String! @index
}


type Transaction @entity {
  id: ID! # txHash
  blockHeight: BigInt!
  txHash: String!
  timestamp: Date!
  type: String!
  status: String!
  roundId: String!
  roundTitle: String!
  circuitName: String!
  fee: String!
  gasUsed: BigInt!
  gasWanted: BigInt!
  caller: String!
  contractAddress: String!
}

type SignUpEvent @entity {
  id: ID! # blockNum - eventId
  blockHeight: BigInt!
  timestamp: Date!
  txHash: String!
  stateIdx: String!
  pubKey: String!
  balance: String!
  contractAddress: String!
}

type PublishMessageEvent @entity {
  id: ID! # blockNum - eventId
  blockHeight: BigInt!
  timestamp: Date!
  txHash: String!
  msgChainLength: String!
  message: String!
  encPubKey: String!
  contractAddress: String!
}
