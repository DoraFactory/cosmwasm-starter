specVersion: 1.0.0
name: cosmoshub-subql-starter
version: 0.0.1
runner:
  node:
    name: "@subql/node-cosmos"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  This project can be use as a starting point for developing your Cosmos (Cosmos
  Hub) based SubQuery project
repository: "https://github.com/subquery/juno-subql-starter"
schema:
  file: ./schema.graphql
network:
  chainId: vota-testnet
  # This endpoint must be a public non-pruned archive node
  # We recommend providing more than one endpoint for improved reliability, performance, and uptime
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  endpoint: ["https://vota-testnet-rpc.dorafactory.org:443"]
dataSources:
  - kind: cosmos/Runtime
    # startBlock: 359775 # code_id is 4
    # startBlock: 376700 # code_id is 4 deploy round data
    # startBlock: 402200 # code_id is 5
    # startBlock: 819300 # code_id is 13
    # startBlock: 16380 # code_id is 1, testnet
    startBlock: 369500
    mapping:
      file: ./dist/index.js
      handlers:
        # Using block handlers slows your project down as they can be executed with each and every block. Only use if you need to
        # - handler: handleBlock
        #   kind: cosmos/BlockHandler
        # Using transaction handlers without filters slows your project down as they can be executed with each and every block
        # - handler: handleTransaction

        - handler: handleEvent
          kind: cosmos/EventHandler
          filter:
            type: wasm
            messageFilter:
              type: "/cosmwasm.wasm.v1.MsgExecuteContract"

        - handler: handleMessage
          kind: cosmos/MessageHandler
          filter:
            type: "/cosmwasm.wasm.v1.MsgExecuteContract"

        - handler: handleInstantiateMessage
          kind: cosmos/MessageHandler
          filter:
            type: "/cosmwasm.wasm.v1.MsgInstantiateContract"
