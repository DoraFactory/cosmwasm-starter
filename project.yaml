specVersion: 1.0.0
name: cosmoshub-subql-starter
version: 0.0.1
runner:
  node:
    name: "@subql/node-cosmos"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  This project can be use as a starting point for developing your Cosmos (Cosmos
  Hub) based SubQuery project
repository: "https://github.com/subquery/juno-subql-starter"
schema:
  file: ./schema.graphql
network:
  chainId: doravota-devnet
  # This endpoint must be a public non-pruned archive node
  # We recommend providing more than one endpoint for improved reliability, performance, and uptime
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  endpoint: ["http://18.139.226.67:26657"]
  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  # dictionary: "https://api.subquery.network/sq/subquery/cosmos-hub-dictionary"
  chainTypes:
    cosmos.slashing.v1beta1:
      file: ./proto/cosmos/slashing/v1beta1/tx.proto
      messages:
        - MsgUnjail
    cosmos.gov.v1beta1:
      file: ./proto/cosmos/gov/v1beta1/tx.proto
      messages:
        - MsgVoteWeighted
    cosmos.gov.v1beta1.gov:
      file: ./proto/cosmos/gov/v1beta1/gov.proto
      messages:
        - WeightedVoteOption
dataSources:
  - kind: cosmos/Runtime
    # startBlock: 109000 # code_id is 18
    # startBlock: 362900 # code_id is 19
    # startBlock: 424700 # code_id is 21
    # startBlock: 915130 # code_id is 35
    # startBlock: 1105000 # code_id is 38
    # startBlock: 1106650 # code_id is 39
    # startBlock: 1114000 # code_id is 40
    # startBlock: 1119000 # code_id is 41
    # startBlock: 1136000 # code_id is 42
    # startBlock: 1190000 # code_id is 44
    # startBlock: 1205100 # code_id is 45
    # startBlock:	1207600 # code_id is 46 start right
    # startBlock: 1225100 # code_id is 46 with failed tx
    # startBlock: 1237900 # code_id is 47 test round
    startBlock: 1263700 # code_id is 49 test round and fix some nits
    mapping:
      file: ./dist/index.js
      handlers:
        # Using block handlers slows your project down as they can be executed with each and every block. Only use if you need to
        # - handler: handleBlock
        #   kind: cosmos/BlockHandler
        # Using transaction handlers without filters slows your project down as they can be executed with each and every block
        # - handler: handleTransaction

        - handler: handleEvent
          kind: cosmos/EventHandler
          filter:
            type: wasm
            messageFilter:
              type: "/cosmwasm.wasm.v1.MsgExecuteContract"

        - handler: handleMessage
          kind: cosmos/MessageHandler
          filter:
            # includeFailedTx: true
            type: "/cosmwasm.wasm.v1.MsgExecuteContract"

        - handler: handleInstantiateMessage
          kind: cosmos/MessageHandler
          filter:
            # includeFailedTx: true
            type: "/cosmwasm.wasm.v1.MsgInstantiateContract"
